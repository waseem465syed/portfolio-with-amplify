"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetDeploymentIsCompleteFunction = exports.AssetDeploymentOnEventFunction = void 0;
/* eslint-disable prettier/prettier,max-len */
const path = require("path");
const lambda = require("aws-cdk-lib/aws-lambda");
class AssetDeploymentOnEventFunction extends lambda.Function {
    constructor(scope, id, props) {
        super(scope, id, {
            ...props,
            "code": lambda.Code.fromAsset(path.join(__dirname, 'asset-deployment-handler')),
            "handler": "index.onEvent",
            "runtime": lambda.determineLatestNodeRuntime(scope)
        });
        this.node.addMetadata('aws:cdk:is-custom-resource-handler-runtime-family', this.runtime.family);
    }
}
exports.AssetDeploymentOnEventFunction = AssetDeploymentOnEventFunction;
class AssetDeploymentIsCompleteFunction extends lambda.Function {
    constructor(scope, id, props) {
        super(scope, id, {
            ...props,
            "code": lambda.Code.fromAsset(path.join(__dirname, 'asset-deployment-handler')),
            "handler": "index.isComplete",
            "runtime": lambda.determineLatestNodeRuntime(scope)
        });
        this.node.addMetadata('aws:cdk:is-custom-resource-handler-runtime-family', this.runtime.family);
    }
}
exports.AssetDeploymentIsCompleteFunction = AssetDeploymentIsCompleteFunction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtZGVwbG95bWVudC1wcm92aWRlci5nZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhc3NldC1kZXBsb3ltZW50LXByb3ZpZGVyLmdlbmVyYXRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMsNkJBQTZCO0FBRTdCLGlEQUFpRDtBQUVqRCxNQUFhLDhCQUErQixTQUFRLE1BQU0sQ0FBQyxRQUFRO0lBQ2pFLFlBQW1CLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQThCO1FBQzdFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQ2YsR0FBRyxLQUFLO1lBQ1IsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLDBCQUEwQixDQUFDLENBQUM7WUFDL0UsU0FBUyxFQUFFLGVBQWU7WUFDMUIsU0FBUyxFQUFFLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxLQUFLLENBQUM7U0FDcEQsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsbURBQW1ELEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNqRztDQUNGO0FBVkQsd0VBVUM7QUFFRCxNQUFhLGlDQUFrQyxTQUFRLE1BQU0sQ0FBQyxRQUFRO0lBQ3BFLFlBQW1CLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQThCO1FBQzdFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQ2YsR0FBRyxLQUFLO1lBQ1IsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLDBCQUEwQixDQUFDLENBQUM7WUFDL0UsU0FBUyxFQUFFLGtCQUFrQjtZQUM3QixTQUFTLEVBQUUsTUFBTSxDQUFDLDBCQUEwQixDQUFDLEtBQUssQ0FBQztTQUNwRCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxtREFBbUQsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2pHO0NBQ0Y7QUFWRCw4RUFVQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHByZXR0aWVyL3ByZXR0aWVyLG1heC1sZW4gKi9cbmltcG9ydCAqIGFzIHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gXCJjb25zdHJ1Y3RzXCI7XG5pbXBvcnQgKiBhcyBsYW1iZGEgZnJvbSBcImF3cy1jZGstbGliL2F3cy1sYW1iZGFcIjtcblxuZXhwb3J0IGNsYXNzIEFzc2V0RGVwbG95bWVudE9uRXZlbnRGdW5jdGlvbiBleHRlbmRzIGxhbWJkYS5GdW5jdGlvbiB7XG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wcz86IGxhbWJkYS5GdW5jdGlvbk9wdGlvbnMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHtcbiAgICAgIC4uLnByb3BzLFxuICAgICAgXCJjb2RlXCI6IGxhbWJkYS5Db2RlLmZyb21Bc3NldChwYXRoLmpvaW4oX19kaXJuYW1lLCAnYXNzZXQtZGVwbG95bWVudC1oYW5kbGVyJykpLFxuICAgICAgXCJoYW5kbGVyXCI6IFwiaW5kZXgub25FdmVudFwiLFxuICAgICAgXCJydW50aW1lXCI6IGxhbWJkYS5kZXRlcm1pbmVMYXRlc3ROb2RlUnVudGltZShzY29wZSlcbiAgICB9KTtcbiAgICB0aGlzLm5vZGUuYWRkTWV0YWRhdGEoJ2F3czpjZGs6aXMtY3VzdG9tLXJlc291cmNlLWhhbmRsZXItcnVudGltZS1mYW1pbHknLCB0aGlzLnJ1bnRpbWUuZmFtaWx5KTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQXNzZXREZXBsb3ltZW50SXNDb21wbGV0ZUZ1bmN0aW9uIGV4dGVuZHMgbGFtYmRhLkZ1bmN0aW9uIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzPzogbGFtYmRhLkZ1bmN0aW9uT3B0aW9ucykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwge1xuICAgICAgLi4ucHJvcHMsXG4gICAgICBcImNvZGVcIjogbGFtYmRhLkNvZGUuZnJvbUFzc2V0KHBhdGguam9pbihfX2Rpcm5hbWUsICdhc3NldC1kZXBsb3ltZW50LWhhbmRsZXInKSksXG4gICAgICBcImhhbmRsZXJcIjogXCJpbmRleC5pc0NvbXBsZXRlXCIsXG4gICAgICBcInJ1bnRpbWVcIjogbGFtYmRhLmRldGVybWluZUxhdGVzdE5vZGVSdW50aW1lKHNjb3BlKVxuICAgIH0pO1xuICAgIHRoaXMubm9kZS5hZGRNZXRhZGF0YSgnYXdzOmNkazppcy1jdXN0b20tcmVzb3VyY2UtaGFuZGxlci1ydW50aW1lLWZhbWlseScsIHRoaXMucnVudGltZS5mYW1pbHkpO1xuICB9XG59Il19